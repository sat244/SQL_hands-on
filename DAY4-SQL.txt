
use demo;

create table tbl_a (id int, name varchar(20));
create table tbl_b (id int, name varchar(20));

insert into tbl_a (id,name) values (1,'A1'),(2,'A2'),(3,'A3'),(4,'A4');

insert into tbl_b (id,name) values (1,'B1'),(2,'B2'),(3,'B3'),(5,'B5'),(6,'B6');


select * from tbl_a;

select * from tbl_b;

select a.*,b.* from tbl_a as a 
inner join tbl_b as b on a.id=b.id;

select a.*,b.* from tbl_a as a 
left join tbl_b as b 
on a.id=b.id;

select a.*,b.* from tbl_b as b
left join tbl_a as a
on a.id=b.id;

select a.*,b.* from tbl_a as a 
right join tbl_b as b 
on a.id=b.id;


select a.*,b.* from tbl_a as a
full join tbl_b as b
on a.id=b.id;

select a.*, b.* from tbl_a as a
left join tbl_b as b 
on a.id=b.id
where b.id is null;

select a.*,b.* from tbl_a as a
right join tbl_b as b
on a.id=b.id
where a.id is null

select * from city;
select * from country;

SELECT *
FROM country, city
WHERE city.country_id = country.id;
    
SELECT *
FROM country
right JOIN city ON city.country_id = country.id;


CREATE TABLE call (
    id int  NOT NULL IDENTITY(1, 1),
    employee_id int  NOT NULL,
    customer_id int  NOT NULL,
    start_time datetime  NOT NULL,
    end_time datetime  NULL,
    call_outcome_id int  NULL,
    CONSTRAINT call_ak_1 UNIQUE (employee_id, start_time),
    CONSTRAINT call_pk PRIMARY KEY  (id)
);


CREATE TABLE call_outcome (
    id int  NOT NULL IDENTITY(1, 1),
    outcome_text char(128)  NOT NULL,
    CONSTRAINT call_outcome_ak_1 UNIQUE (outcome_text),
    CONSTRAINT call_outcome_pk PRIMARY KEY  (id)
);


CREATE TABLE customer (
    id int  NOT NULL IDENTITY(1, 1),
    customer_name varchar(255)  NOT NULL,
    city_id int  NOT NULL,
    customer_address varchar(255)  NOT NULL,
    next_call_date date  NULL,
    ts_inserted datetime  NOT NULL,
    CONSTRAINT customer_pk PRIMARY KEY  (id)
);


CREATE TABLE employee (
    id int  NOT NULL IDENTITY(1, 1),
    first_name varchar(255)  NOT NULL,
    last_name varchar(255)  NOT NULL,
    CONSTRAINT employee_pk PRIMARY KEY  (id)
);


ALTER TABLE call ADD CONSTRAINT call_call_outcome
    FOREIGN KEY (call_outcome_id)
    REFERENCES call_outcome (id);


ALTER TABLE call ADD CONSTRAINT call_employee
    FOREIGN KEY (employee_id)
    REFERENCES employee (id);


ALTER TABLE customer ADD CONSTRAINT customer_city
    FOREIGN KEY (city_id)
    REFERENCES city (id);

select * from call;
select * from call_outcome;
select * from employee;
select * from customer;
select * from city;


INSERT INTO call_outcome (outcome_text) VALUES ('call started');
INSERT INTO call_outcome (outcome_text) VALUES ('finished - successfully');
INSERT INTO call_outcome (outcome_text) VALUES ('finished - unsuccessfully');
    
INSERT INTO employee (first_name, last_name) VALUES ('Thomas (Neo)', 'Anderson');
INSERT INTO employee (first_name, last_name) VALUES ('Agent', 'Smith');
    
INSERT INTO customer (customer_name, city_id, customer_address, next_call_date, ts_inserted) VALUES ('Jewelry Store', 4, 'Long Street 120', '2020/1/21', '2020/1/9 14:1:20');
INSERT INTO customer (customer_name, city_id, customer_address, next_call_date, ts_inserted) VALUES ('Bakery', 1, 'Kurfürstendamm 25', '2020/2/21', '2020/1/9 17:52:15');
INSERT INTO customer (customer_name, city_id, customer_address, next_call_date, ts_inserted) VALUES ('Café', 1, 'Tauentzienstraße 44', '2020/1/21', '2020/1/10 8:2:49');
INSERT INTO customer (customer_name, city_id, customer_address, next_call_date, ts_inserted) VALUES ('Restaurant', 3, 'Ulica lipa 15', '2020/1/21', '2020/1/10 9:20:21');
    
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (1, 4, '2020/1/11 9:0:15', '2020/1/11 9:12:22', 2);
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (1, 2, '2020/1/11 9:14:50', '2020/1/11 9:20:1', 2);
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (2, 3, '2020/1/11 9:2:20', '2020/1/11 9:18:5', 3);
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (1, 1, '2020/1/11 9:24:15', '2020/1/11 9:25:5', 3);
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (1, 3, '2020/1/11 9:26:23', '2020/1/11 9:33:45', 2);
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (1, 2, '2020/1/11 9:40:31', '2020/1/11 9:42:32', 2);
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (2, 4, '2020/1/11 9:41:17', '2020/1/11 9:45:21', 2);
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (1, 1, '2020/1/11 9:42:32', '2020/1/11 9:46:53', 3);
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (2, 1, '2020/1/11 9:46:0', '2020/1/11 9:48:2', 2);
INSERT INTO call (employee_id, customer_id, start_time, end_time, call_outcome_id) VALUES (2, 2, '2020/1/11 9:50:12', '2020/1/11 9:55:35', 2);


select 'country_table' as table_name,count(*) as country from country
union ALL
select 'city_table'as table_name,count(*) as city from city;




SELECT *
FROM country
LEFT JOIN city ON city.country_id =  country.id;
    
SELECT COUNT(*) AS number_of_rows
FROM country
LEFT JOIN city ON city.country_id =  country.id;
    
SELECT COUNT(country.country_name) AS countries, COUNT(city.city_name) AS cities
FROM country
LEFT JOIN city ON city.country_id =  country.id;


SELECT * FROM CITY;

SELECT MIN(ID),MAX(ID) FROM CITY WHERE COL_NAME IS NULL 

SELECT* FROM CALL;
SELECT 
	country.country_name_eng,
	SUM(CASE WHEN call.id IS NOT NULL THEN 1 ELSE 0 END) AS calls,
	AVG(ISNULL(DATEDIFF(SECOND, call.start_time, call.end_time),0)) AS avg_difference
FROM country 
LEFT JOIN city ON city.country_id = country.id
LEFT JOIN customer ON city.id = customer.city_id
LEFT JOIN call ON call.customer_id = customer.id
GROUP BY 
	country.id,
	country.country_name_eng
HAVING AVG(ISNULL(DATEDIFF(SECOND, call.start_time, call.end_time),0)) > (SELECT AVG(DATEDIFF(SECOND, call.start_time, call.end_time)) FROM call)
ORDER BY calls DESC, country.id ASC;

	

SELECT 
	*
FROM country 
LEFT JOIN city ON city.country_id = country.id
LEFT JOIN customer ON city.id = customer.city_id
LEFT JOIN call ON call.customer_id = customer.id;


SELECT 
	country.country_name_eng,
	SUM(CASE WHEN call.id IS NOT NULL THEN 1 ELSE 0 END) AS calls,
	AVG(ISNULL(DATEDIFF(SECOND, call.start_time, call.end_time),0)) AS avg_difference
FROM country 
LEFT JOIN city ON city.country_id = country.id
LEFT JOIN customer ON city.id = customer.city_id
LEFT JOIN call ON call.customer_id = customer.id
GROUP BY 
	country.id,
	country.country_name_eng
ORDER BY calls DESC, country.id ASC; 


SELECT * FROM CALL;
SELECT * FROM CUSTOMER;
select customer.id
    from customer
    inner join call on customer.id = call.customer_id
	group by customer.id
	having count(*) = 3

select customer.*
from customer 
where id in (
    select customer.id
    from customer
    inner join call on customer.id = call.customer_id
    group by customer.id
    having count(*) = 3
)
    
UNION ALL
    
-- list all customers from Berlin
select customer.*
from customer
inner join city on customer.city_id = city.id
where city.city_name = 'Berlin';



select customer.*
from customer 
where id in (
    select customer.id
    from customer
    inner join call on customer.id = call.customer_id
    group by customer.id
    having count(*) = 3
)
    
--UNION ALL
--INTERSECT
EXCEPT
    
-- list all customers from Berlin
select customer.*
from customer
inner join city on customer.city_id = city.id
where city.city_name = 'Berlin';







